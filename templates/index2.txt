<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3D Model Upload</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f4f4f9;
        }
        .container {
            text-align: center;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            width: 400px;
        }
        input[type="file"] {
            margin: 20px 0;
        }
        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }
        button:hover {
            background-color: #45a049;
        }
        .result {
            margin-top: 20px;
        }
        .error {
            color: red;
        }
    </style>
</head>
<body>

<div class="container">
    <h2>Upload 3D Model</h2>
    <input type="file" id="fileInput" accept=".stl,.step,.stp">
    <button onclick="uploadFile()">Upload</button>
    <div id="result" class="result"></div>
</div>

<script>
document.getElementById('uploadForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    
    try {
        const response = await fetch('/upload', {
            method: 'POST',
            body: formData
        });

        const text = await response.text();  // First get raw text
        let data;

        try {
            data = JSON.parse(text);  // Try parsing JSON
        } catch (jsonErr) {
            throw new Error("Server returned invalid JSON: " + text);
        }

        if (!response.ok) {
            throw new Error(data.error || "Unknown error");
        }

        // Success!
        alert(`Volume: ${data.volume.toFixed(2)} cmÂ³\nPrice: $${data.price.toFixed(2)}`);

    } catch (err) {
        console.error(err);
        alert("Upload failed: " + err.message);
    }
});
</script>

</body>
</html>
